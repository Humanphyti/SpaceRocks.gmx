<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>score = 0;
lives = 3;
draw_set_font(fnt_text);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room != rm_skyroom){
    exit;
}
if(choose(0,1) == 0){
    //go down the side
    var xx = choose(0, room_width);
    var yy = irandom_range(0, room_height);
} else {
    //go top or bottom
    var xx = irandom_range(0,room_width);
    var yy = choose(0, room_height);
}

instance_create(xx, yy, obj_asteroid);

alarm[1] = 2*room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_enter)){
    switch(room){
        case rm_start:
            room_goto(rm_skyroom);
            break;
        case rm_win:
        case rm_gameover:
            game_restart();
            break;
            
    }
}
if (room == rm_skyroom){
    if (score &gt;= 1000){
        room_goto(rm_win);
    }
    
    if (lives &lt;= 0){
        room_goto(rm_gameover);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == rm_skyroom){
    repeat(6){
        var xx = choose(irandom_range(0, room_width*0.3), irandom_range(room_width*0.7, room_width));
        var yy = choose(irandom_range(0, room_height*0.3), irandom_range(room_height*0.7, room_height));
        instance_create(xx, yy, obj_asteroid);
    }
    instance_create(room_width/2, room_height/2, obj_ship);
    alarm[1] = 60;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(room){
    case rm_start:
        
        var c = c_lime
        draw_text_transformed_colour((room_width/2-250), 400, "SPACE ROCKS", 3, 3, 0, c, c, c, c, 1);
        draw_text_transformed_colour(room_width/2-250, 500, "Score 1000 Points to Win!
        
W: Forward thrust
S: Reverse thrust
A/D: Rotate Ship
        
&gt;&gt; Press Enter to Begin &lt;&lt;", 1, 1, 0, c_white, c_white, c_white, c_white, 1);
        //draw_text_
        break;
        
    case rm_skyroom:        
        draw_text(20,20, "SCORE: " + string(score));
        draw_text(20,40, "LIVES: " + string(lives));
        break;
    
    case rm_win:
        var c = c_lime
        draw_text_transformed_colour(room_width/2-175, 400, "YOU WON", 3, 3, 0, c, c, c, c, 1);
        draw_text_transformed_colour(room_width/2-175, 500, "PRESS ENTER TO RESTART", 1, 1, 0, c_white, c_white, c_white, c_white, 1);
        break;
        
    case rm_gameover:
        
        var c = c_red
        draw_text_transformed_colour(room_width/2-175, 400, "YOU DIED", 3, 3, 0, c, c, c, c, 1);
        draw_text_transformed_colour(room_width/2-175, 500, "Final Score: "+string(score), 1, 1, 0, c_white, c_white, c_white, c_white,1);
        draw_text_transformed_colour(room_width/2-175, 700, "PRESS ENTER TO RESTART", 1, 1, 0, c_white, c_white,c_white,c_white,1);
        break;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
